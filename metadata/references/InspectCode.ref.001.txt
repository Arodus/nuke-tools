                --output                (-o)                - lets you set the output file.                                                                                                    --project                    - allows analyzing particular project(s) instead of the whole solution.                    After this parameter,                    you can type a project name or a wildcard that matches several projects within your solution.                    For example,                    --project=*Billing                                    --disable-settings-layers                    (-dsl)                    - disables specified                    settings layers.                    Accepted values:                    GlobalAll,                    GlobalPerProduct,                    SolutionShared,                    SolutionPersonal,                    ProjectShared,                    ProjectPersonal                    (note that the per-project settings are not available in the ReSharper GUI.                    To create a per-project settings file,                    you can save your settings as a solution-shared and then rename the settings file to the                    YourProject.csproj.DotSettings)                                    --no-buildin-settings                    - suppresses global, solution and project settings profile usage.                    Equivalent to using                    --disable-settings-layers: GlobalAll; GlobalPerProduct; SolutionShared; SolutionPersonal; ProjectShared; ProjectPersonal                                    --caches-home                    - lets you specify a custom location for the data that InspectCode caches.                    By default, the                    %LOCALAPPDATA% directory is used, unless there are settings files,                    in which case the one specified there is used.                    This parameter can be helpful if you want to use a fast SSD disk for the cache or if you want                    to store all your build processing data in a single place.                                    --eXtensions                    (-x)                    – allows using ReSharper extensions that affect code analysis. To use an extension, specify                    its ID, which you can find by opening the extension package page in the                    ReSharper Gallery, and then the                    Package Statistics page. Multiple values are separated with the semicolon.                                --properties                – lets you override MSBuild properties. You can set each property separately                (--properties:prop1=val1                --properties:prop2=val2), or use a semicolon to separate multiple properties                (--properties:prop1=val1;prop2=val2).                The specified properties are applied to all analyzed projects.                Currently, there is no direct way to set a property to a specific project only.                The workaround is to create a custom property in this project and assign it                to the desired property, then use the custom property in dupFinder parameters.                                --dumpIssuesTypes                    (-it)                    - use this option to dump all existing                    code inspections to the                    output.                    This option should be used separately from actual analysis, i.e. without the solution argument.                                --config-create                and                --config                – these options allow you to pass the parameters described above with a configuration file.                The first option will create a configuration file according to the current parameters;                the second option is used to load the parameters from this file.                                --toolset                    – explicitly specified MsBuild Toolset version (12.0, 14.0, 15.0). For example,                    --toolset=12.0.                