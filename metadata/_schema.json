{
  "$schema": "http://json-schema.org/draft-04/schema",
  "title": "JSON schema for tool metadata",
  "id": "nuke-tools",
  "type": "object",
  "properties": {
    "license": {
      "type": "array",
      "description": "Contains the license header.",
      "items": {
        "type": "string"
      }
    },
    "references": {
      "type": "array",
      "description": "Contains all references on which this definition is based on. Allows checking for updates.",
      "items": {
        "type": "string"
      }
    },
    "name": {
      "type": "string",
      "description": "Name of the tool."
    },
    "officialUrl": {
      "type": "string",
      "description": "Url to the official website."
    },
    "help": {
      "type": "string",
      "description": "Help or introduction text to for the tool. Can contain HTML tags for better formatting."
    },
    "packageId": {
      "type": "string",
      "description": "ID for the NuGet package."
    },
    "packageExecutable": {
      "type": "string",
      "description": "Exact name of the main executable found in the './tools' folder. Case-sensitive."
    },
    "customExecutable": {
      "type": "boolean",
      "description": "Defines that locating the executable is implemented customly."
    },
    "pathExecutable": {
      "type": "string",
      "description": "Exact name of the executable that can be found via 'where' or 'which'."
    },
    "tasks": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "help": {
            "type": "string",
            "description": "Help or introduction text to for the tool. Can contain HTML tags for better formatting."
          },
          "customStart": {
            "type": "boolean",
            "description": "Custom start implementation."
          },
          "customAssertion": {
            "type": "boolean",
            "description": "Custom process assertion implementation."
          },
          "returnType": {
            "type": "string",
            "description": "Return type of the task."
          },
          "postfix": {
            "type": "string",
            "description": "Postfix for the task alias."
          },
          "definiteArgument": {
            "type": "string",
            "description": "Argument that will always be printed independently of any set property."
          },
          "settingsClass": {
            "type": "object",
            "properties": {
              "properties": {
                "type": "array",
                "items": { "$ref": "#/definitions/property" }
              }
            }
          }
        }
      }
    },
    "commonTaskProperties": {
      "type": "array",
      "description": "Common properties for all tasks.",
      "items": { "$ref": "#/definitions/property" }
    },
    "dataClasses": {
      "type": "array",
      "description": "Common used data classes.",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the data class."
          },
          "properties": {
            "type": "array",
            "items": { "$ref": "#/definitions/property" }
          }
        }
      }
    }, 
    "enumerations": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the enumeration."
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      } 
    } 
  },
  "definitions": {
    "property": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the property."
        },
        "type": {
          "type": "string",
          "description": "Type of the property. I.e., bool, int, string, List<int>, Dictionary<string, object>, Lookup<string, int>"
        },
        "format": {
          "type": "string",
          "description": "Argument formatting for the property. '{value}' is replaced by the value of the property."
        },
        "itemFormat": {
          "type": "string",
          "description": "Item formatting for dictionaries. '{key}' and '{value}' are replaced accordingly."
        },
        "separator": {
          "type": "string",
          "description": "Separator used for items of collection types."
        },
        "disallowedCharacter": {
          "type": "string",
          "description": "Character that must be double-quoted."
        },
        "customValue": {
          "type": "boolean",
          "description": "Custom implementation of value presentation."
        },
        "noArgument": {
          "type": "boolean",
          "description": "Omits argument parsing."
        },
        "assertion": {
          "type": "string",
          "enum": [ "NotNull", "File", "Directory", "FileOrNull", "DirectoryOrNull" ],
          "description": "Automatic assertion."
        },
        "secret": {
          "type": "boolean",
          "description": "Specifies that the value is secret and should be hidden in output."
        },
        "createOverload": {
          "type": "boolean",
          "description": "Specifies that an overload for the property should be created."
        },
        "help": {
          "type": "string",
          "description": "Help text for the property."
        }
      }
    }
  }
}

